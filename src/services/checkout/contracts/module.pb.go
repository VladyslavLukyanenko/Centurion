// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: module.proto

package contracts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Module int32

const (
	Module_YEEZY_SUPPLY Module = 0
	Module_FAKE_SHOP    Module = 1
	Module_AMAZON       Module = 2
)

// Enum value maps for Module.
var (
	Module_name = map[int32]string{
		0: "YEEZY_SUPPLY",
		1: "FAKE_SHOP",
		2: "AMAZON",
	}
	Module_value = map[string]int32{
		"YEEZY_SUPPLY": 0,
		"FAKE_SHOP":    1,
		"AMAZON":       2,
	}
)

func (x Module) Enum() *Module {
	p := new(Module)
	*p = x
	return p
}

func (x Module) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Module) Descriptor() protoreflect.EnumDescriptor {
	return file_module_proto_enumTypes[0].Descriptor()
}

func (Module) Type() protoreflect.EnumType {
	return &file_module_proto_enumTypes[0]
}

func (x Module) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Module.Descriptor instead.
func (Module) EnumDescriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{0}
}

type Cardinality int32

const (
	Cardinality_CARDINALITY_NONE Cardinality = 0
	Cardinality_REQUIRED         Cardinality = 1
	Cardinality_REPEATED         Cardinality = 2
)

// Enum value maps for Cardinality.
var (
	Cardinality_name = map[int32]string{
		0: "CARDINALITY_NONE",
		1: "REQUIRED",
		2: "REPEATED",
	}
	Cardinality_value = map[string]int32{
		"CARDINALITY_NONE": 0,
		"REQUIRED":         1,
		"REPEATED":         2,
	}
)

func (x Cardinality) Enum() *Cardinality {
	p := new(Cardinality)
	*p = x
	return p
}

func (x Cardinality) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cardinality) Descriptor() protoreflect.EnumDescriptor {
	return file_module_proto_enumTypes[1].Descriptor()
}

func (Cardinality) Type() protoreflect.EnumType {
	return &file_module_proto_enumTypes[1]
}

func (x Cardinality) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cardinality.Descriptor instead.
func (Cardinality) EnumDescriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{1}
}

type Type int32

const (
	Type_TYPE_UNSPECIFIED Type = 0
	// 0 is reserved for errors.
	// Order is weird for historical reasons.
	Type_TYPE_DOUBLE Type = 1
	Type_TYPE_FLOAT  Type = 2
	// Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if
	// negative values are likely.
	Type_TYPE_INT64  Type = 3
	Type_TYPE_UINT64 Type = 4
	// Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if
	// negative values are likely.
	Type_TYPE_INT32   Type = 5
	Type_TYPE_FIXED64 Type = 6
	Type_TYPE_FIXED32 Type = 7
	Type_TYPE_BOOL    Type = 8
	Type_TYPE_STRING  Type = 9
	// Tag-delimited aggregate.
	// Group type is deprecated and not supported in proto3. However, Proto3
	// implementations should still be able to parse the group wire format and
	// treat group fields as unknown fields.
	Type_TYPE_GROUP   Type = 10
	Type_TYPE_MESSAGE Type = 11 // Length-delimited aggregate.
	// New in version 2.
	Type_TYPE_BYTES    Type = 12
	Type_TYPE_UINT32   Type = 13
	Type_TYPE_ENUM     Type = 14
	Type_TYPE_SFIXED32 Type = 15
	Type_TYPE_SFIXED64 Type = 16
	Type_TYPE_SINT32   Type = 17 // Uses ZigZag encoding.
	Type_TYPE_SINT64   Type = 18 // Uses ZigZag encoding.
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0:  "TYPE_UNSPECIFIED",
		1:  "TYPE_DOUBLE",
		2:  "TYPE_FLOAT",
		3:  "TYPE_INT64",
		4:  "TYPE_UINT64",
		5:  "TYPE_INT32",
		6:  "TYPE_FIXED64",
		7:  "TYPE_FIXED32",
		8:  "TYPE_BOOL",
		9:  "TYPE_STRING",
		10: "TYPE_GROUP",
		11: "TYPE_MESSAGE",
		12: "TYPE_BYTES",
		13: "TYPE_UINT32",
		14: "TYPE_ENUM",
		15: "TYPE_SFIXED32",
		16: "TYPE_SFIXED64",
		17: "TYPE_SINT32",
		18: "TYPE_SINT64",
	}
	Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_DOUBLE":      1,
		"TYPE_FLOAT":       2,
		"TYPE_INT64":       3,
		"TYPE_UINT64":      4,
		"TYPE_INT32":       5,
		"TYPE_FIXED64":     6,
		"TYPE_FIXED32":     7,
		"TYPE_BOOL":        8,
		"TYPE_STRING":      9,
		"TYPE_GROUP":       10,
		"TYPE_MESSAGE":     11,
		"TYPE_BYTES":       12,
		"TYPE_UINT32":      13,
		"TYPE_ENUM":        14,
		"TYPE_SFIXED32":    15,
		"TYPE_SFIXED64":    16,
		"TYPE_SINT32":      17,
		"TYPE_SINT64":      18,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_module_proto_enumTypes[2].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_module_proto_enumTypes[2]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{2}
}

type AllowedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName     string  `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ValidationRegex *string `protobuf:"bytes,3,opt,name=validation_regex,json=validationRegex,proto3,oneof" json:"validation_regex,omitempty"`
	DiscardOthers   *bool   `protobuf:"varint,4,opt,name=discard_others,json=discardOthers,proto3,oneof" json:"discard_others,omitempty"`
}

func (x *AllowedValue) Reset() {
	*x = AllowedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowedValue) ProtoMessage() {}

func (x *AllowedValue) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowedValue.ProtoReflect.Descriptor instead.
func (*AllowedValue) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{0}
}

func (x *AllowedValue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AllowedValue) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *AllowedValue) GetValidationRegex() string {
	if x != nil && x.ValidationRegex != nil {
		return *x.ValidationRegex
	}
	return ""
}

func (x *AllowedValue) GetDiscardOthers() bool {
	if x != nil && x.DiscardOthers != nil {
		return *x.DiscardOthers
	}
	return false
}

type ModuleMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module      Module                  `protobuf:"varint,1,opt,name=module,proto3,enum=Module" json:"module,omitempty"`
	DisplayName string                  `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Version     string                  `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Config      *ConfigDescriptor       `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	Modes       []*CheckoutModeMetadata `protobuf:"bytes,5,rep,name=modes,proto3" json:"modes,omitempty"`
}

func (x *ModuleMetadata) Reset() {
	*x = ModuleMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleMetadata) ProtoMessage() {}

func (x *ModuleMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleMetadata.ProtoReflect.Descriptor instead.
func (*ModuleMetadata) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{1}
}

func (x *ModuleMetadata) GetModule() Module {
	if x != nil {
		return x.Module
	}
	return Module_YEEZY_SUPPLY
}

func (x *ModuleMetadata) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ModuleMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ModuleMetadata) GetConfig() *ConfigDescriptor {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ModuleMetadata) GetModes() []*CheckoutModeMetadata {
	if x != nil {
		return x.Modes
	}
	return nil
}

type CheckoutModeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Config        *ConfigDescriptor `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	MonitorConfig *ConfigDescriptor `protobuf:"bytes,3,opt,name=monitor_config,json=monitorConfig,proto3,oneof" json:"monitor_config,omitempty"` // getProductBySku (prob url only)
}

func (x *CheckoutModeMetadata) Reset() {
	*x = CheckoutModeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckoutModeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutModeMetadata) ProtoMessage() {}

func (x *CheckoutModeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutModeMetadata.ProtoReflect.Descriptor instead.
func (*CheckoutModeMetadata) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{2}
}

func (x *CheckoutModeMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CheckoutModeMetadata) GetConfig() *ConfigDescriptor {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CheckoutModeMetadata) GetMonitorConfig() *ConfigDescriptor {
	if x != nil {
		return x.MonitorConfig
	}
	return nil
}

type ConfigDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType string                   `protobuf:"bytes,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	Fields      []*ConfigFieldDescriptor `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ConfigDescriptor) Reset() {
	*x = ConfigDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDescriptor) ProtoMessage() {}

func (x *ConfigDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDescriptor.ProtoReflect.Descriptor instead.
func (*ConfigDescriptor) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigDescriptor) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *ConfigDescriptor) GetFields() []*ConfigFieldDescriptor {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ReflectedAllowedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *AllowedValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Index int32         `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ReflectedAllowedValue) Reset() {
	*x = ReflectedAllowedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReflectedAllowedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReflectedAllowedValue) ProtoMessage() {}

func (x *ReflectedAllowedValue) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReflectedAllowedValue.ProtoReflect.Descriptor instead.
func (*ReflectedAllowedValue) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{4}
}

func (x *ReflectedAllowedValue) GetValue() *AllowedValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ReflectedAllowedValue) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ConfigFieldDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cardinality   uint32                   `protobuf:"varint,2,opt,name=cardinality,proto3" json:"cardinality,omitempty"`
	Type          Type                     `protobuf:"varint,3,opt,name=type,proto3,enum=Type" json:"type,omitempty"`
	TypeName      string                   `protobuf:"bytes,4,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	AllowedValues []*ReflectedAllowedValue `protobuf:"bytes,5,rep,name=allowed_values,json=allowedValues,proto3" json:"allowed_values,omitempty"`
}

func (x *ConfigFieldDescriptor) Reset() {
	*x = ConfigFieldDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigFieldDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigFieldDescriptor) ProtoMessage() {}

func (x *ConfigFieldDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigFieldDescriptor.ProtoReflect.Descriptor instead.
func (*ConfigFieldDescriptor) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigFieldDescriptor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigFieldDescriptor) GetCardinality() uint32 {
	if x != nil {
		return x.Cardinality
	}
	return 0
}

func (x *ConfigFieldDescriptor) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *ConfigFieldDescriptor) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *ConfigFieldDescriptor) GetAllowedValues() []*ReflectedAllowedValue {
	if x != nil {
		return x.AllowedValues
	}
	return nil
}

var file_module_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*Module)(nil),
		Field:         50000,
		Name:          "centurion_module",
		Tag:           "varint,50000,opt,name=centurion_module,enum=Module",
		Filename:      "module.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50001,
		Name:          "centurion_module_display_name",
		Tag:           "bytes,50001,opt,name=centurion_module_display_name",
		Filename:      "module.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50002,
		Name:          "centurion_version",
		Tag:           "bytes,50002,opt,name=centurion_version",
		Filename:      "module.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50003,
		Name:          "centurion_checkout_mode",
		Tag:           "bytes,50003,opt,name=centurion_checkout_mode",
		Filename:      "module.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50004,
		Name:          "centurion_monitor_mode",
		Tag:           "bytes,50004,opt,name=centurion_monitor_mode",
		Filename:      "module.proto",
	},
	{
		ExtendedType:  (*descriptorpb.OneofOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50000,
		Name:          "centurion_module_modes",
		Tag:           "varint,50000,opt,name=centurion_module_modes",
		Filename:      "module.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50000,
		Name:          "centurion_allowed_values_definition",
		Tag:           "varint,50000,opt,name=centurion_allowed_values_definition",
		Filename:      "module.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*AllowedValue)(nil),
		Field:         50000,
		Name:          "centurion_allowed_value",
		Tag:           "bytes,50000,opt,name=centurion_allowed_value",
		Filename:      "module.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional Module centurion_module = 50000;
	E_CenturionModule = &file_module_proto_extTypes[0]
	// optional string centurion_module_display_name = 50001;
	E_CenturionModuleDisplayName = &file_module_proto_extTypes[1]
	// optional string centurion_version = 50002;
	E_CenturionVersion = &file_module_proto_extTypes[2]
	// optional string centurion_checkout_mode = 50003;
	E_CenturionCheckoutMode = &file_module_proto_extTypes[3]
	// optional string centurion_monitor_mode = 50004;
	E_CenturionMonitorMode = &file_module_proto_extTypes[4]
)

// Extension fields to descriptorpb.OneofOptions.
var (
	// optional bool centurion_module_modes = 50000;
	E_CenturionModuleModes = &file_module_proto_extTypes[5]
)

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional bool centurion_allowed_values_definition = 50000;
	E_CenturionAllowedValuesDefinition = &file_module_proto_extTypes[6]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional AllowedValue centurion_allowed_value = 50000;
	E_CenturionAllowedValue = &file_module_proto_extTypes[7]
)

var File_module_proto protoreflect.FileDescriptor

var file_module_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xc5, 0x01, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x65,
	0x78, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0d,
	0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x67, 0x65, 0x78, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x0e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0xa7, 0x01, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x0e, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x65, 0x0a, 0x10, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x22, 0x52, 0x0a, 0x15, 0x52, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xc4, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x52, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2a, 0x35, 0x0a,
	0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x59, 0x45, 0x45, 0x5a, 0x59,
	0x5f, 0x53, 0x55, 0x50, 0x50, 0x4c, 0x59, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x41, 0x4b,
	0x45, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4d, 0x41, 0x5a,
	0x4f, 0x4e, 0x10, 0x02, 0x2a, 0x3f, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x52, 0x44, 0x49, 0x4e, 0x41, 0x4c, 0x49,
	0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x51,
	0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x50, 0x45, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x02, 0x2a, 0xcc, 0x02, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x55,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4c,
	0x4f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e,
	0x54, 0x36, 0x34, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49,
	0x4e, 0x54, 0x36, 0x34, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49,
	0x4e, 0x54, 0x33, 0x32, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46,
	0x49, 0x58, 0x45, 0x44, 0x36, 0x34, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x46, 0x49, 0x58, 0x45, 0x44, 0x33, 0x32, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x0b, 0x12, 0x0e, 0x0a, 0x0a,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x0c, 0x12, 0x0f, 0x0a, 0x0b,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x0d, 0x12, 0x0d, 0x0a,
	0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x55, 0x4d, 0x10, 0x0e, 0x12, 0x11, 0x0a, 0x0d,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x46, 0x49, 0x58, 0x45, 0x44, 0x33, 0x32, 0x10, 0x0f, 0x12,
	0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x46, 0x49, 0x58, 0x45, 0x44, 0x36, 0x34,
	0x10, 0x10, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x54, 0x33,
	0x32, 0x10, 0x11, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x54,
	0x36, 0x34, 0x10, 0x12, 0x3a, 0x58, 0x0a, 0x10, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x07, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0f, 0x63, 0x65, 0x6e, 0x74,
	0x75, 0x72, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x67,
	0x0a, 0x1d, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xd1, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72,
	0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x51, 0x0a, 0x11, 0x63, 0x65, 0x6e, 0x74, 0x75,
	0x72, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd2, 0x86,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x3a, 0x5c, 0x0a, 0x17, 0x63, 0x65,
	0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd3, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x5a, 0x0a, 0x16, 0x63, 0x65, 0x6e, 0x74,
	0x75, 0x72, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xd4, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x65, 0x6e,
	0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x3a, 0x55, 0x0a, 0x16, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x3a, 0x70, 0x0a, 0x23, 0x63,
	0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xd0, 0x86, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x3a, 0x6d, 0x0a,
	0x17, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x15, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x42, 0x6c, 0x0a, 0x15,
	0x67, 0x67, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x43, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x73, 0x2f,
	0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0xaa, 0x02, 0x13, 0x43, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_module_proto_rawDescOnce sync.Once
	file_module_proto_rawDescData = file_module_proto_rawDesc
)

func file_module_proto_rawDescGZIP() []byte {
	file_module_proto_rawDescOnce.Do(func() {
		file_module_proto_rawDescData = protoimpl.X.CompressGZIP(file_module_proto_rawDescData)
	})
	return file_module_proto_rawDescData
}

var file_module_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_module_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_module_proto_goTypes = []interface{}{
	(Module)(0),                           // 0: Module
	(Cardinality)(0),                      // 1: Cardinality
	(Type)(0),                             // 2: Type
	(*AllowedValue)(nil),                  // 3: AllowedValue
	(*ModuleMetadata)(nil),                // 4: ModuleMetadata
	(*CheckoutModeMetadata)(nil),          // 5: CheckoutModeMetadata
	(*ConfigDescriptor)(nil),              // 6: ConfigDescriptor
	(*ReflectedAllowedValue)(nil),         // 7: ReflectedAllowedValue
	(*ConfigFieldDescriptor)(nil),         // 8: ConfigFieldDescriptor
	(*descriptorpb.MessageOptions)(nil),   // 9: google.protobuf.MessageOptions
	(*descriptorpb.OneofOptions)(nil),     // 10: google.protobuf.OneofOptions
	(*descriptorpb.EnumOptions)(nil),      // 11: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 12: google.protobuf.EnumValueOptions
}
var file_module_proto_depIdxs = []int32{
	0,  // 0: ModuleMetadata.module:type_name -> Module
	6,  // 1: ModuleMetadata.config:type_name -> ConfigDescriptor
	5,  // 2: ModuleMetadata.modes:type_name -> CheckoutModeMetadata
	6,  // 3: CheckoutModeMetadata.config:type_name -> ConfigDescriptor
	6,  // 4: CheckoutModeMetadata.monitor_config:type_name -> ConfigDescriptor
	8,  // 5: ConfigDescriptor.fields:type_name -> ConfigFieldDescriptor
	3,  // 6: ReflectedAllowedValue.value:type_name -> AllowedValue
	2,  // 7: ConfigFieldDescriptor.type:type_name -> Type
	7,  // 8: ConfigFieldDescriptor.allowed_values:type_name -> ReflectedAllowedValue
	9,  // 9: centurion_module:extendee -> google.protobuf.MessageOptions
	9,  // 10: centurion_module_display_name:extendee -> google.protobuf.MessageOptions
	9,  // 11: centurion_version:extendee -> google.protobuf.MessageOptions
	9,  // 12: centurion_checkout_mode:extendee -> google.protobuf.MessageOptions
	9,  // 13: centurion_monitor_mode:extendee -> google.protobuf.MessageOptions
	10, // 14: centurion_module_modes:extendee -> google.protobuf.OneofOptions
	11, // 15: centurion_allowed_values_definition:extendee -> google.protobuf.EnumOptions
	12, // 16: centurion_allowed_value:extendee -> google.protobuf.EnumValueOptions
	0,  // 17: centurion_module:type_name -> Module
	3,  // 18: centurion_allowed_value:type_name -> AllowedValue
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	17, // [17:19] is the sub-list for extension type_name
	9,  // [9:17] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_module_proto_init() }
func file_module_proto_init() {
	if File_module_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_module_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckoutModeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReflectedAllowedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigFieldDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_module_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_module_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_module_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 8,
			NumServices:   0,
		},
		GoTypes:           file_module_proto_goTypes,
		DependencyIndexes: file_module_proto_depIdxs,
		EnumInfos:         file_module_proto_enumTypes,
		MessageInfos:      file_module_proto_msgTypes,
		ExtensionInfos:    file_module_proto_extTypes,
	}.Build()
	File_module_proto = out.File
	file_module_proto_rawDesc = nil
	file_module_proto_goTypes = nil
	file_module_proto_depIdxs = nil
}
