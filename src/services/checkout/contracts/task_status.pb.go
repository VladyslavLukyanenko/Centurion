// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: task_status.proto

package contracts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskCategory int32

const (
	TaskCategory_TASK_CATEGORY_UNSPECIFIED TaskCategory = 0
	TaskCategory_TASK_CATEGORY_CHECKED_OUT TaskCategory = 1
	TaskCategory_TASK_CATEGORY_CARTED      TaskCategory = 2
	TaskCategory_TASK_CATEGORY_DECLINED    TaskCategory = 3
	TaskCategory_TASK_CATEGORY_TERMINATED  TaskCategory = 4
	TaskCategory_TASK_CATEGORY_FAILED      TaskCategory = 5
	TaskCategory_TASK_CATEGORY_FATAL_ERROR TaskCategory = 6
)

// Enum value maps for TaskCategory.
var (
	TaskCategory_name = map[int32]string{
		0: "TASK_CATEGORY_UNSPECIFIED",
		1: "TASK_CATEGORY_CHECKED_OUT",
		2: "TASK_CATEGORY_CARTED",
		3: "TASK_CATEGORY_DECLINED",
		4: "TASK_CATEGORY_TERMINATED",
		5: "TASK_CATEGORY_FAILED",
		6: "TASK_CATEGORY_FATAL_ERROR",
	}
	TaskCategory_value = map[string]int32{
		"TASK_CATEGORY_UNSPECIFIED": 0,
		"TASK_CATEGORY_CHECKED_OUT": 1,
		"TASK_CATEGORY_CARTED":      2,
		"TASK_CATEGORY_DECLINED":    3,
		"TASK_CATEGORY_TERMINATED":  4,
		"TASK_CATEGORY_FAILED":      5,
		"TASK_CATEGORY_FATAL_ERROR": 6,
	}
)

func (x TaskCategory) Enum() *TaskCategory {
	p := new(TaskCategory)
	*p = x
	return p
}

func (x TaskCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_task_status_proto_enumTypes[0].Descriptor()
}

func (TaskCategory) Type() protoreflect.EnumType {
	return &file_task_status_proto_enumTypes[0]
}

func (x TaskCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskCategory.Descriptor instead.
func (TaskCategory) EnumDescriptor() ([]byte, []int) {
	return file_task_status_proto_rawDescGZIP(), []int{0}
}

type TaskStage int32

const (
	TaskStage_TASK_STAGE_UNSPECIFIED  TaskStage = 0
	TaskStage_TASK_STAGE_STARTING     TaskStage = 1
	TaskStage_TASK_STAGE_RUNNING      TaskStage = 2
	TaskStage_TASK_STAGE_CHECKING_OUT TaskStage = 3
	TaskStage_TASK_STAGE_ERROR        TaskStage = 4
	TaskStage_TASK_STAGE_IDLE         TaskStage = 5
)

// Enum value maps for TaskStage.
var (
	TaskStage_name = map[int32]string{
		0: "TASK_STAGE_UNSPECIFIED",
		1: "TASK_STAGE_STARTING",
		2: "TASK_STAGE_RUNNING",
		3: "TASK_STAGE_CHECKING_OUT",
		4: "TASK_STAGE_ERROR",
		5: "TASK_STAGE_IDLE",
	}
	TaskStage_value = map[string]int32{
		"TASK_STAGE_UNSPECIFIED":  0,
		"TASK_STAGE_STARTING":     1,
		"TASK_STAGE_RUNNING":      2,
		"TASK_STAGE_CHECKING_OUT": 3,
		"TASK_STAGE_ERROR":        4,
		"TASK_STAGE_IDLE":         5,
	}
)

func (x TaskStage) Enum() *TaskStage {
	p := new(TaskStage)
	*p = x
	return p
}

func (x TaskStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStage) Descriptor() protoreflect.EnumDescriptor {
	return file_task_status_proto_enumTypes[1].Descriptor()
}

func (TaskStage) Type() protoreflect.EnumType {
	return &file_task_status_proto_enumTypes[1]
}

func (x TaskStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStage.Descriptor instead.
func (TaskStage) EnumDescriptor() ([]byte, []int) {
	return file_task_status_proto_rawDescGZIP(), []int{1}
}

type TaskStatusData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category    TaskCategory `protobuf:"varint,1,opt,name=category,proto3,enum=TaskCategory" json:"category,omitempty"`
	Title       string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description *string      `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Stage       TaskStage    `protobuf:"varint,4,opt,name=stage,proto3,enum=TaskStage" json:"stage,omitempty"`
}

func (x *TaskStatusData) Reset() {
	*x = TaskStatusData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_status_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStatusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatusData) ProtoMessage() {}

func (x *TaskStatusData) ProtoReflect() protoreflect.Message {
	mi := &file_task_status_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatusData.ProtoReflect.Descriptor instead.
func (*TaskStatusData) Descriptor() ([]byte, []int) {
	return file_task_status_proto_rawDescGZIP(), []int{0}
}

func (x *TaskStatusData) GetCategory() TaskCategory {
	if x != nil {
		return x.Category
	}
	return TaskCategory_TASK_CATEGORY_UNSPECIFIED
}

func (x *TaskStatusData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TaskStatusData) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *TaskStatusData) GetStage() TaskStage {
	if x != nil {
		return x.Stage
	}
	return TaskStage_TASK_STAGE_UNSPECIFIED
}

var File_task_status_proto protoreflect.FileDescriptor

var file_task_status_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2a, 0xd9, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f,
	0x52, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1d, 0x0a, 0x19, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52,
	0x59, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x01, 0x12,
	0x18, 0x0a, 0x14, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59,
	0x5f, 0x43, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x44, 0x45, 0x43, 0x4c, 0x49,
	0x4e, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x43, 0x41,
	0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x43, 0x41, 0x54, 0x45,
	0x47, 0x4f, 0x52, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1d, 0x0a,
	0x19, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x46,
	0x41, 0x54, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x2a, 0xa0, 0x01, 0x0a,
	0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x41,
	0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53,
	0x54, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x16, 0x0a, 0x12, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x53, 0x4b, 0x5f,
	0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x4f,
	0x55, 0x54, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41,
	0x47, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x41,
	0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x05, 0x42,
	0x6c, 0x0a, 0x15, 0x67, 0x67, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x4c, 0x61,
	0x62, 0x73, 0x2f, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0xaa, 0x02, 0x13, 0x43, 0x65, 0x6e, 0x74, 0x75, 0x72,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_task_status_proto_rawDescOnce sync.Once
	file_task_status_proto_rawDescData = file_task_status_proto_rawDesc
)

func file_task_status_proto_rawDescGZIP() []byte {
	file_task_status_proto_rawDescOnce.Do(func() {
		file_task_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_task_status_proto_rawDescData)
	})
	return file_task_status_proto_rawDescData
}

var file_task_status_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_task_status_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_task_status_proto_goTypes = []interface{}{
	(TaskCategory)(0),      // 0: TaskCategory
	(TaskStage)(0),         // 1: TaskStage
	(*TaskStatusData)(nil), // 2: TaskStatusData
}
var file_task_status_proto_depIdxs = []int32{
	0, // 0: TaskStatusData.category:type_name -> TaskCategory
	1, // 1: TaskStatusData.stage:type_name -> TaskStage
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_task_status_proto_init() }
func file_task_status_proto_init() {
	if File_task_status_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_task_status_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskStatusData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_task_status_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_task_status_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_task_status_proto_goTypes,
		DependencyIndexes: file_task_status_proto_depIdxs,
		EnumInfos:         file_task_status_proto_enumTypes,
		MessageInfos:      file_task_status_proto_msgTypes,
	}.Build()
	File_task_status_proto = out.File
	file_task_status_proto_rawDesc = nil
	file_task_status_proto_goTypes = nil
	file_task_status_proto_depIdxs = nil
}
