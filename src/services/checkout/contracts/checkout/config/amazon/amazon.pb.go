// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: checkout/config/amazon/amazon.proto

package amazon

import (
	contracts "github.com/CenturionLabs/centurion/checkout-service/contracts"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AmazonCheckoutConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseId string `protobuf:"bytes,1,opt,name=purchase_id,json=purchaseId,proto3" json:"purchase_id,omitempty"`
	UseSmile   bool   `protobuf:"varint,2,opt,name=use_smile,json=useSmile,proto3" json:"use_smile,omitempty"`
	Csrf       string `protobuf:"bytes,3,opt,name=csrf,proto3" json:"csrf,omitempty"` //  optional AmazonMonitorFastConfig monitor_config = 4;
}

func (x *AmazonCheckoutConfig) Reset() {
	*x = AmazonCheckoutConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_config_amazon_amazon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmazonCheckoutConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmazonCheckoutConfig) ProtoMessage() {}

func (x *AmazonCheckoutConfig) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_config_amazon_amazon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmazonCheckoutConfig.ProtoReflect.Descriptor instead.
func (*AmazonCheckoutConfig) Descriptor() ([]byte, []int) {
	return file_checkout_config_amazon_amazon_proto_rawDescGZIP(), []int{0}
}

func (x *AmazonCheckoutConfig) GetPurchaseId() string {
	if x != nil {
		return x.PurchaseId
	}
	return ""
}

func (x *AmazonCheckoutConfig) GetUseSmile() bool {
	if x != nil {
		return x.UseSmile
	}
	return false
}

func (x *AmazonCheckoutConfig) GetCsrf() string {
	if x != nil {
		return x.Csrf
	}
	return ""
}

type AmazonTurboConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferId        string `protobuf:"bytes,1,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`
	UseSmile       bool   `protobuf:"varint,2,opt,name=use_smile,json=useSmile,proto3" json:"use_smile,omitempty"`
	SendAllCookies bool   `protobuf:"varint,3,opt,name=send_all_cookies,json=sendAllCookies,proto3" json:"send_all_cookies,omitempty"` //  optional AmazonMonitorFastConfig monitor_config = 4;
}

func (x *AmazonTurboConfig) Reset() {
	*x = AmazonTurboConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_config_amazon_amazon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmazonTurboConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmazonTurboConfig) ProtoMessage() {}

func (x *AmazonTurboConfig) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_config_amazon_amazon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmazonTurboConfig.ProtoReflect.Descriptor instead.
func (*AmazonTurboConfig) Descriptor() ([]byte, []int) {
	return file_checkout_config_amazon_amazon_proto_rawDescGZIP(), []int{1}
}

func (x *AmazonTurboConfig) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *AmazonTurboConfig) GetUseSmile() bool {
	if x != nil {
		return x.UseSmile
	}
	return false
}

func (x *AmazonTurboConfig) GetSendAllCookies() bool {
	if x != nil {
		return x.SendAllCookies
	}
	return false
}

type AmazonMonitorFastConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferId string `protobuf:"bytes,1,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"` //  google.protobuf.Duration reset_delay = 2;
}

func (x *AmazonMonitorFastConfig) Reset() {
	*x = AmazonMonitorFastConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_config_amazon_amazon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmazonMonitorFastConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmazonMonitorFastConfig) ProtoMessage() {}

func (x *AmazonMonitorFastConfig) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_config_amazon_amazon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmazonMonitorFastConfig.ProtoReflect.Descriptor instead.
func (*AmazonMonitorFastConfig) Descriptor() ([]byte, []int) {
	return file_checkout_config_amazon_amazon_proto_rawDescGZIP(), []int{2}
}

func (x *AmazonMonitorFastConfig) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

type AmazonConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region              string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	MaxPrice            *float64               `protobuf:"fixed64,2,opt,name=max_price,json=maxPrice,proto3,oneof" json:"max_price,omitempty"`
	Ua                  *string                `protobuf:"bytes,3,opt,name=ua,proto3,oneof" json:"ua,omitempty"`
	SecUa               *string                `protobuf:"bytes,4,opt,name=sec_ua,json=secUa,proto3,oneof" json:"sec_ua,omitempty"`
	MaxCheckoutAttempts *int32                 `protobuf:"varint,5,opt,name=max_checkout_attempts,json=maxCheckoutAttempts,proto3,oneof" json:"max_checkout_attempts,omitempty"`
	Session             *contracts.SessionData `protobuf:"bytes,6,opt,name=session,proto3" json:"session,omitempty"`
	Qty                 uint32                 `protobuf:"varint,7,opt,name=qty,proto3" json:"qty,omitempty"`
	// Types that are assignable to Mode:
	//	*AmazonConfig_Turbo
	//	*AmazonConfig_Checkout
	Mode isAmazonConfig_Mode `protobuf_oneof:"mode"`
}

func (x *AmazonConfig) Reset() {
	*x = AmazonConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_config_amazon_amazon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmazonConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmazonConfig) ProtoMessage() {}

func (x *AmazonConfig) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_config_amazon_amazon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmazonConfig.ProtoReflect.Descriptor instead.
func (*AmazonConfig) Descriptor() ([]byte, []int) {
	return file_checkout_config_amazon_amazon_proto_rawDescGZIP(), []int{3}
}

func (x *AmazonConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AmazonConfig) GetMaxPrice() float64 {
	if x != nil && x.MaxPrice != nil {
		return *x.MaxPrice
	}
	return 0
}

func (x *AmazonConfig) GetUa() string {
	if x != nil && x.Ua != nil {
		return *x.Ua
	}
	return ""
}

func (x *AmazonConfig) GetSecUa() string {
	if x != nil && x.SecUa != nil {
		return *x.SecUa
	}
	return ""
}

func (x *AmazonConfig) GetMaxCheckoutAttempts() int32 {
	if x != nil && x.MaxCheckoutAttempts != nil {
		return *x.MaxCheckoutAttempts
	}
	return 0
}

func (x *AmazonConfig) GetSession() *contracts.SessionData {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *AmazonConfig) GetQty() uint32 {
	if x != nil {
		return x.Qty
	}
	return 0
}

func (m *AmazonConfig) GetMode() isAmazonConfig_Mode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (x *AmazonConfig) GetTurbo() *AmazonTurboConfig {
	if x, ok := x.GetMode().(*AmazonConfig_Turbo); ok {
		return x.Turbo
	}
	return nil
}

func (x *AmazonConfig) GetCheckout() *AmazonCheckoutConfig {
	if x, ok := x.GetMode().(*AmazonConfig_Checkout); ok {
		return x.Checkout
	}
	return nil
}

type isAmazonConfig_Mode interface {
	isAmazonConfig_Mode()
}

type AmazonConfig_Turbo struct {
	Turbo *AmazonTurboConfig `protobuf:"bytes,8,opt,name=turbo,proto3,oneof"`
}

type AmazonConfig_Checkout struct {
	Checkout *AmazonCheckoutConfig `protobuf:"bytes,9,opt,name=checkout,proto3,oneof"`
}

func (*AmazonConfig_Turbo) isAmazonConfig_Mode() {}

func (*AmazonConfig_Checkout) isAmazonConfig_Mode() {}

var File_checkout_config_amazon_amazon_proto protoreflect.FileDescriptor

var file_checkout_config_amazon_amazon_proto_rawDesc = []byte{
	0x0a, 0x23, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2f, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x1a,
	0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x76, 0x0a, 0x14,
	0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x6d, 0x69,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x53, 0x6d, 0x69,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x73, 0x72, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x73, 0x72, 0x66, 0x3a, 0x0c, 0x9a, 0xb5, 0x18, 0x08, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x11, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x54,
	0x75, 0x72, 0x62, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x6d, 0x69,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x53, 0x6d, 0x69,
	0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x63,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x65,
	0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x3a, 0x09, 0x9a, 0xb5,
	0x18, 0x05, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x22, 0x34, 0x0a, 0x17, 0x41, 0x6d, 0x61, 0x7a, 0x6f,
	0x6e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x46, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc3, 0x03,
	0x0a, 0x0c, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x75, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x02, 0x75, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a,
	0x06, 0x73, 0x65, 0x63, 0x5f, 0x75, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x05, 0x73, 0x65, 0x63, 0x55, 0x61, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x6d, 0x61, 0x78,
	0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x05,
	0x74, 0x75, 0x72, 0x62, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x54, 0x75, 0x72,
	0x62, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x05, 0x74, 0x75, 0x72, 0x62,
	0x6f, 0x12, 0x3c, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x41,
	0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x3a,
	0x1a, 0x80, 0xb5, 0x18, 0x02, 0x8a, 0xb5, 0x18, 0x06, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x92,
	0xb5, 0x18, 0x08, 0x32, 0x30, 0x32, 0x31, 0x31, 0x32, 0x32, 0x37, 0x42, 0x0c, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x12, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x75, 0x61, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x73, 0x65, 0x63, 0x5f, 0x75, 0x61, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x73, 0x42, 0x93, 0x01, 0x0a, 0x1c, 0x67, 0x67, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x75,
	0x72, 0x69, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x61, 0x6d,
	0x61, 0x7a, 0x6f, 0x6e, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x43, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x63,
	0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2f, 0x61, 0x6d, 0x61,
	0x7a, 0x6f, 0x6e, 0xaa, 0x02, 0x23, 0x43, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x2e, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_checkout_config_amazon_amazon_proto_rawDescOnce sync.Once
	file_checkout_config_amazon_amazon_proto_rawDescData = file_checkout_config_amazon_amazon_proto_rawDesc
)

func file_checkout_config_amazon_amazon_proto_rawDescGZIP() []byte {
	file_checkout_config_amazon_amazon_proto_rawDescOnce.Do(func() {
		file_checkout_config_amazon_amazon_proto_rawDescData = protoimpl.X.CompressGZIP(file_checkout_config_amazon_amazon_proto_rawDescData)
	})
	return file_checkout_config_amazon_amazon_proto_rawDescData
}

var file_checkout_config_amazon_amazon_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_checkout_config_amazon_amazon_proto_goTypes = []interface{}{
	(*AmazonCheckoutConfig)(nil),    // 0: checkout.AmazonCheckoutConfig
	(*AmazonTurboConfig)(nil),       // 1: checkout.AmazonTurboConfig
	(*AmazonMonitorFastConfig)(nil), // 2: checkout.AmazonMonitorFastConfig
	(*AmazonConfig)(nil),            // 3: checkout.AmazonConfig
	(*contracts.SessionData)(nil),   // 4: SessionData
}
var file_checkout_config_amazon_amazon_proto_depIdxs = []int32{
	4, // 0: checkout.AmazonConfig.session:type_name -> SessionData
	1, // 1: checkout.AmazonConfig.turbo:type_name -> checkout.AmazonTurboConfig
	0, // 2: checkout.AmazonConfig.checkout:type_name -> checkout.AmazonCheckoutConfig
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_checkout_config_amazon_amazon_proto_init() }
func file_checkout_config_amazon_amazon_proto_init() {
	if File_checkout_config_amazon_amazon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_checkout_config_amazon_amazon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmazonCheckoutConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_config_amazon_amazon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmazonTurboConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_config_amazon_amazon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmazonMonitorFastConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_config_amazon_amazon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmazonConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_checkout_config_amazon_amazon_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*AmazonConfig_Turbo)(nil),
		(*AmazonConfig_Checkout)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_checkout_config_amazon_amazon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_checkout_config_amazon_amazon_proto_goTypes,
		DependencyIndexes: file_checkout_config_amazon_amazon_proto_depIdxs,
		MessageInfos:      file_checkout_config_amazon_amazon_proto_msgTypes,
	}.Build()
	File_checkout_config_amazon_amazon_proto = out.File
	file_checkout_config_amazon_amazon_proto_rawDesc = nil
	file_checkout_config_amazon_amazon_proto_goTypes = nil
	file_checkout_config_amazon_amazon_proto_depIdxs = nil
}
