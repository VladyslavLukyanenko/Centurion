// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: monitor/monitor_service.proto

package monitor

import (
	contracts "github.com/CenturionLabs/centurion/checkout-service/contracts"
	integration "github.com/CenturionLabs/centurion/checkout-service/contracts/monitor/integration"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WatchCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product      *contracts.ProductData   `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	UserId       string                   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProxyPool    *contracts.ProxyPoolData `protobuf:"bytes,3,opt,name=proxy_pool,json=proxyPool,proto3" json:"proxy_pool,omitempty"`
	Module       contracts.Module         `protobuf:"varint,4,opt,name=module,proto3,enum=Module" json:"module,omitempty"`
	TaskId       string                   `protobuf:"bytes,5,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Extra        map[string]string        `protobuf:"bytes,6,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ModuleConfig []byte                   `protobuf:"bytes,7,opt,name=module_config,json=moduleConfig,proto3" json:"module_config,omitempty"`
}

func (x *WatchCommand) Reset() {
	*x = WatchCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitor_monitor_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchCommand) ProtoMessage() {}

func (x *WatchCommand) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_monitor_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchCommand.ProtoReflect.Descriptor instead.
func (*WatchCommand) Descriptor() ([]byte, []int) {
	return file_monitor_monitor_service_proto_rawDescGZIP(), []int{0}
}

func (x *WatchCommand) GetProduct() *contracts.ProductData {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *WatchCommand) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WatchCommand) GetProxyPool() *contracts.ProxyPoolData {
	if x != nil {
		return x.ProxyPool
	}
	return nil
}

func (x *WatchCommand) GetModule() contracts.Module {
	if x != nil {
		return x.Module
	}
	return contracts.Module_YEEZY_SUPPLY
}

func (x *WatchCommand) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *WatchCommand) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *WatchCommand) GetModuleConfig() []byte {
	if x != nil {
		return x.ModuleConfig
	}
	return nil
}

type WatchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlreadyInStock bool              `protobuf:"varint,1,opt,name=already_in_stock,json=alreadyInStock,proto3" json:"already_in_stock,omitempty"`
	ExtraData      map[string]string `protobuf:"bytes,2,rep,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WatchResult) Reset() {
	*x = WatchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitor_monitor_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchResult) ProtoMessage() {}

func (x *WatchResult) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_monitor_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchResult.ProtoReflect.Descriptor instead.
func (*WatchResult) Descriptor() ([]byte, []int) {
	return file_monitor_monitor_service_proto_rawDescGZIP(), []int{1}
}

func (x *WatchResult) GetAlreadyInStock() bool {
	if x != nil {
		return x.AlreadyInStock
	}
	return false
}

func (x *WatchResult) GetExtraData() map[string]string {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

var File_monitor_monitor_service_proto protoreflect.FileDescriptor

var file_monitor_monitor_service_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x1a, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf, 0x02, 0x0a, 0x0c, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f,
	0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12,
	0x36, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x38, 0x0a, 0x0a,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb9, 0x01, 0x0a, 0x0b, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x42, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x3c, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x32, 0x61, 0x0a, 0x07, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x56, 0x0a,
	0x0d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x64, 0x12, 0x15,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x2c, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x30, 0x01, 0x42, 0x7b, 0x0a, 0x14, 0x67, 0x67, 0x2e, 0x63, 0x65, 0x6e, 0x74,
	0x75, 0x72, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5a, 0x45, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x65, 0x6e, 0x74, 0x75, 0x72,
	0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f,
	0x6e, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0xaa, 0x02, 0x1b, 0x43, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_monitor_monitor_service_proto_rawDescOnce sync.Once
	file_monitor_monitor_service_proto_rawDescData = file_monitor_monitor_service_proto_rawDesc
)

func file_monitor_monitor_service_proto_rawDescGZIP() []byte {
	file_monitor_monitor_service_proto_rawDescOnce.Do(func() {
		file_monitor_monitor_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_monitor_monitor_service_proto_rawDescData)
	})
	return file_monitor_monitor_service_proto_rawDescData
}

var file_monitor_monitor_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_monitor_monitor_service_proto_goTypes = []interface{}{
	(*WatchCommand)(nil),            // 0: monitor.WatchCommand
	(*WatchResult)(nil),             // 1: monitor.WatchResult
	nil,                             // 2: monitor.WatchCommand.ExtraEntry
	nil,                             // 3: monitor.WatchResult.ExtraDataEntry
	(*contracts.ProductData)(nil),   // 4: ProductData
	(*contracts.ProxyPoolData)(nil), // 5: ProxyPoolData
	(contracts.Module)(0),           // 6: Module
	(*integration.MonitoringStatusChanged)(nil), // 7: monitor.integration.MonitoringStatusChanged
}
var file_monitor_monitor_service_proto_depIdxs = []int32{
	4, // 0: monitor.WatchCommand.product:type_name -> ProductData
	5, // 1: monitor.WatchCommand.proxy_pool:type_name -> ProxyPoolData
	6, // 2: monitor.WatchCommand.module:type_name -> Module
	2, // 3: monitor.WatchCommand.extra:type_name -> monitor.WatchCommand.ExtraEntry
	3, // 4: monitor.WatchResult.extra_data:type_name -> monitor.WatchResult.ExtraDataEntry
	0, // 5: monitor.Monitor.WatchStreamed:input_type -> monitor.WatchCommand
	7, // 6: monitor.Monitor.WatchStreamed:output_type -> monitor.integration.MonitoringStatusChanged
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_monitor_monitor_service_proto_init() }
func file_monitor_monitor_service_proto_init() {
	if File_monitor_monitor_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_monitor_monitor_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitor_monitor_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_monitor_monitor_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_monitor_monitor_service_proto_goTypes,
		DependencyIndexes: file_monitor_monitor_service_proto_depIdxs,
		MessageInfos:      file_monitor_monitor_service_proto_msgTypes,
	}.Build()
	File_monitor_monitor_service_proto = out.File
	file_monitor_monitor_service_proto_rawDesc = nil
	file_monitor_monitor_service_proto_goTypes = nil
	file_monitor_monitor_service_proto_depIdxs = nil
}
